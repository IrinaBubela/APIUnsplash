{"version":3,"sources":["SelectedPhoto.js","SearchPhotos.js","App.js","reportWebVitals.js","index.js"],"names":["SelectedPhoto","props","useState","lgShow","setLgShow","className","onClick","alt","pic","alt_description","src","urls","full","width","height","id","user","profile_image","small","name","Modal","size","show","onHide","aria-labelledby","Header","closeButton","Title","Body","regular","Footer","location","KEY","process","unsplash","Unsplash","accessKey","SearchPhotos","getSuggestions","value","a","inputValue","trim","toLowerCase","axios","get","params","query","headers","Authorization","response","data","onSuggestionSelected","event","suggestion","method","suggestionValue","index","preventDefault","setState","searchPhotos","getSuggestionValue","renderSuggestion","onChange","newValue","onSuggestionsFetchRequested","length","then","suggestions","results","catch","err","console","log","onSuggestionsClearRequested","handleSubmit","e","search","photos","state","toJson","json","pics","suggestionSelected","pictures","this","inputProps","placeholder","map","el","i","onSubmit","htmlFor","type","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.720f6096.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal } from 'react-bootstrap';\r\n\r\nconst SelectedPhoto = (props) => {\r\n\r\n    const [lgShow, setLgShow] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card-item\" key={props.pic.id} onClick={() => setLgShow(true)}>\r\n                <a>\r\n                    <img\r\n                        className=\"card--image\"\r\n                        alt={props.pic.alt_description}\r\n                        src={props.pic.urls.full}\r\n                        width=\"50%\"\r\n                        height=\"50%\"\r\n                    />\r\n                    <div id=\"hiding-div\">\r\n                        <img\r\n                            id=\"user-icon\"\r\n                            alt={props.pic.alt_description}\r\n                            src={props.pic.user.profile_image.small}\r\n                        />\r\n                        <p>{props.pic.user.name}</p>\r\n                    </div>\r\n                </a>\r\n            </div>\r\n            <Modal\r\n                size=\"xl\"\r\n                show={lgShow}\r\n                onHide={() => setLgShow(false)}\r\n                aria-labelledby=\"example-modal-sizes-title-lg\"\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>\r\n                        <img\r\n                            id=\"user-icon\"\r\n                            alt={props.pic.alt_description}\r\n                            src={props.pic.user.profile_image.small}\r\n                        />\r\n                        <p>{props.pic.user.name}</p>\r\n                    </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <img\r\n                        src={props.pic.urls.regular} alt={props.pic.alt_description}\r\n                    />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <p>\r\n                        {props.pic.user.location}\r\n                    </p>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SelectedPhoto;","import React from \"react\";\r\nimport Unsplash, { toJson } from \"unsplash-js\";\r\nimport axios from 'axios';\r\nimport Autosuggest from 'react-autosuggest';\r\nimport SelectedPhoto from './SelectedPhoto';\r\n\r\nconst API_URL = \"https://api.unsplash.com/search/photos?per_page=24&query=\"\r\nconst KEY = process.env.REACT_APP_NOT_SECRET_CODE;\r\n\r\nconst unsplash = new Unsplash({\r\n    accessKey: KEY\r\n});\r\n\r\n\r\nexport default class SearchPhotos extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            query: '',\r\n            value: '',\r\n            pics: '',\r\n            suggestions: [],\r\n            suggestionSelected: ''\r\n        };\r\n    }\r\n    // Filter logic\r\n    getSuggestions = async (value) => {\r\n        const inputValue = value.trim().toLowerCase();\r\n        let response = await axios.get(`${API_URL}?page=1`,\r\n            {\r\n                params: { query: inputValue },\r\n                headers: {\r\n                    Authorization: `Client-ID ${KEY}`\r\n                }\r\n            })\r\n        let data = response.data;\r\n        return data;\r\n    };\r\n\r\n    onSuggestionSelected = (event, { suggestion, suggestionValue, index, method }) => {\r\n        event.preventDefault();\r\n        if (method === 'click') {\r\n            this.setState({\r\n                query: suggestion.alt_description\r\n            })\r\n        }\r\n\r\n        this.searchPhotos();\r\n    }\r\n\r\n    // Trigger suggestions\r\n    getSuggestionValue = suggestion => suggestion.alt_description;\r\n\r\n    // Render Each Option\r\n    renderSuggestion = suggestion => (\r\n        <span className=\"sugg-option\">\r\n            {suggestion.alt_description}\r\n        </span>\r\n    );\r\n\r\n    // OnChange event handler\r\n    onChange = (event, { newValue }) => {\r\n        this.setState({\r\n            value: newValue,\r\n            query: newValue\r\n        });\r\n    };\r\n\r\n    // Suggestion rerender when user types\r\n    onSuggestionsFetchRequested = ({ value }) => {\r\n        if (value.length > 2) {\r\n            this.getSuggestions(value)\r\n                .then(data => {\r\n                    this.setState({\r\n                        suggestions: data.results\r\n                    });\r\n                })\r\n                .catch(err =>\r\n                    console.log(err)\r\n                )\r\n        }\r\n    };\r\n\r\n    // Triggered on clear\r\n    onSuggestionsClearRequested = () => {\r\n        this.setState({\r\n            suggestions: []\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.searchPhotos();\r\n    }\r\n\r\n    searchPhotos = async () => {\r\n        unsplash.search\r\n            .photos(this.state.query, 1, 20)\r\n            .then(toJson)\r\n            .then((json) => {\r\n                this.setState({\r\n                    pics: json.results,\r\n                    value: ''\r\n                })\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const { value, suggestions } = this.state;\r\n\r\n        // Option props\r\n        const inputProps = {\r\n            placeholder: 'Search photo ...',\r\n            value,\r\n            onChange: this.onChange\r\n        };\r\n\r\n        let pictures;\r\n        if (this.state.pics) {\r\n            pictures = this.state.pics.map((el, i) =>\r\n                <SelectedPhoto pic={el} key={i} />\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                    <label className=\"label\" htmlFor=\"query\">\r\n                        {\" \"}\r\n                    </label>\r\n\r\n                    <Autosuggest\r\n                        className=\"input-suggest\"\r\n                        suggestions={suggestions}\r\n                        onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\r\n                        onSuggestionsClearRequested={this.onSuggestionsClearRequested}\r\n                        getSuggestionValue={this.getSuggestionValue}\r\n                        onSuggestionSelected={this.onSuggestionSelected}\r\n                        renderSuggestion={this.renderSuggestion}\r\n                        inputProps={inputProps}\r\n                    />\r\n                    <button type=\"submit\" className=\"button\">\r\n                        Search\r\n                    </button>\r\n                </form>\r\n                <div className=\"card-list\">\r\n                    {pictures}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport SearchPhotos from \"./SearchPhotos\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"container\">\r\n                <SearchPhotos />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}